

# create resource group and set defaults
az group create --name stickerAppACS-RG --location westus
az configure --defaults group=stickerAppACS-RG location=westus

# 3 worker VMs, 1 master VM that runs kubectl API
az acs create --orchestrator-type Kubernetes --name stickerApp-cluster

# pull credentials so kubectl can talk to the master VM
az acs kubernetes get-credentials  --name stickerApp-cluster

# confirm that we're communicating with the cluster in azure
kubectl cluster-info

# run 3 instances of chrisdias/stickerapp:latest image
kubectl run stickerapp-prod --image chrisdias/stickerapp:latest --port=3000 --replicas=3
# expose to the world
kubectl expose deployments stickerapp-prod --port=80 --type=LoadBalancer
# get the public IP address
kubectl get svc

# kubernetes portal 
kubectl proxy

# run a debug version but do not expose
# --env="MONGODB_URL=connection string..."
kubectl run stickerapp-debug --image chrisdias/stickerapp:latest -- node --debug=5858 server/index.js 
# get name of pod (container) in Kubernetes
kubectl get pods
kubectl port-forward [stickerapp-debug-984658896-p545k] 5858:5858 3000:3000
# now set breakpoint and attach debugger!

# clean up everything!
az group delete --name stickerAppACS-RG --yes --no-wait

# az acs kubernetes install-cli 
kubectl version

